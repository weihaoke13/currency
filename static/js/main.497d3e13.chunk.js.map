{"version":3,"sources":["Converter.js","index.js"],"names":["Converter","state","currencies","base","amount","convertTo","result","date","handleSelect","e","setState","target","name","value","calculate","handleInput","isNaN","fetch","then","res","json","data","rates","toFixed","handleSwap","preventDefault","this","className","type","onChange","map","currency","key","disabled","onClick","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mNAmIeA,E,2MA9HXC,MAAM,CACFC,WAAW,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAChDC,KAAK,MACLC,OAAO,GACPC,UAAU,MACVC,OAAO,GACPC,KAAK,I,EAGTC,aAAa,SAACC,GAAK,IAAD,EACd,EAAKC,UAAL,mBACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,OAD9B,uBAEW,MAFX,GAIA,EAAKC,Y,EAKTC,YAAY,SAACN,GACT,EAAKC,SAAS,CACVN,OAAOK,EAAEE,OAAOE,MAChBP,OAAO,MAEX,EAAKQ,Y,EAKTA,UAAU,WACN,IAAMV,EAAS,EAAKH,MAAMG,OACvBA,IAAWY,OAGVC,MAAM,+CAAD,OAAgD,EAAKhB,MAAME,OAC/De,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACF,IAAMd,EAAOc,EAAKd,KACZD,GAAUe,EAAKC,MAAM,EAAKrB,MAAMI,WAAaD,GAAQmB,QAAQ,GACnE,EAAKb,SAAS,CACVJ,SACAC,Y,EAMhBiB,WAAa,SAACf,GACV,IAAMN,EAAO,EAAKF,MAAME,KAClBE,EAAY,EAAKJ,MAAMI,UAC7BI,EAAEgB,iBACF,EAAKf,SAAS,CACVL,UAAYF,EACZA,KAAOE,EACPC,OAAQ,MAEZ,EAAKQ,Y,wEAIA,IAAD,EACkDY,KAAKzB,MAApDC,EADH,EACGA,WAAWC,EADd,EACcA,KAAKC,EADnB,EACmBA,OAAOC,EAD1B,EAC0BA,UAAUC,EADpC,EACoCA,OAAOC,EAD3C,EAC2CA,KAC/C,OACI,yBAAKoB,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,kBACP,4BAAKvB,EAAL,IAAcD,EAAd,sBACA,4BACgB,OAAXG,EAAkB,kBAAoBA,EAD3C,IACoDD,GAEpD,oCAAUE,GAEV,yBAAKoB,UAAU,OACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,oBACZ,2BACAC,KAAK,SACDf,MAAOT,EACPyB,SAAUH,KAAKX,YACfY,UAAU,sCAEd,4BACIf,KAAK,OACLC,MAAOV,EACP0B,SAAUH,KAAKlB,aACfmB,UAAU,gCACTzB,EAAW4B,IAAI,SAAAC,GAAQ,OACpB,4BAAQC,IAAKD,EAAUlB,MAAOkB,GAAWA,OAKrD,0BAAMJ,UAAU,oBACZ,2BACIM,UAAU,EACVpB,MACc,OAAVP,EAAiB,cAAgBA,EACrCqB,UAAU,uCAEd,4BACIf,KAAK,YACLC,MAAOR,EACPwB,SAAUH,KAAKlB,aACfmB,UAAU,gCACTzB,EAAW4B,IAAI,SAAAC,GAAQ,OAChB,4BAAQC,IAAKD,EAAUlB,MAAOkB,GAAWA,QAM7D,yBAAKJ,UAAU,8BACX,wBAAIO,QAASR,KAAKF,WAAYG,UAAU,QAAxC,0B,GAnHZQ,a,MCaxB,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAVhB,WACI,OACI,yBAAKb,UAAU,OACX,kBAAC,EAAD,QAOI,MAAOS,I","file":"static/js/main.497d3e13.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Converter extends Component{\n\n    state={\n        currencies:['USD','CNY','CAD','PHP','EUR','JPY','MXN'],\n        base:'USD',\n        amount:'',\n        convertTo:'EUR',\n        result:'',\n        date:''\n    };\n\n    handleSelect=(e)=>{\n        this.setState({\n            [e.target.name] :e.target.value,\n            result:null,\n        },\n        this.calculate\n        );\n\n    };\n\n    handleInput=(e)=>{\n        this.setState({\n            amount:e.target.value,\n            result:null,\n        },\n        this.calculate\n        );\n        \n    };\n\n    calculate=()=>{\n        const amount = this.state.amount;\n        if(amount === isNaN){\n            return;\n        }else{\n            fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n            .then(res => res.json())\n            .then(data =>{\n                const date = data.date;\n                const result = (data.rates[this.state.convertTo] * amount).toFixed(4);\n                this.setState({\n                    result,\n                    date \n                });\n            });\n        }\n    };\n\n    handleSwap = (e) => {\n        const base = this.state.base\n        const convertTo = this.state.convertTo\n        e.preventDefault();\n        this.setState({\n            convertTo : base, \n            base : convertTo,\n            result: null\n        },\n        this.calculate\n        );\n    };\n\n    render(){\n        const {currencies,base,amount,convertTo,result,date} =this.state\n        return(\n            <div className='container my-5'>\n                <div className='row'>\n                    <div className='col-lg-6 mx-auto'>\n                    <div className='card card-body'>\n                            <h5>{amount} {base} is equevalent to </h5>\n                            <h2>\n                                {result === null ? \"Calculating ...\" : result} {convertTo}\n                            </h2>\n                            <p>As of {date}</p>\n\n                            <div className='row'>\n                                <div className='col-lg-10 '>\n                                    <form className='form-inline md-4'>\n                                        <input\n                                        type='number'\n                                            value={amount}\n                                            onChange={this.handleInput}\n                                            className='form-control form-control-lg mx-3'>\n                                        </input>\n                                        <select\n                                            name='base'\n                                            value={base}\n                                            onChange={this.handleSelect}\n                                            className='form-control form-control-lg'>\n                                            {currencies.map(currency => \n                                                <option key={currency} value={currency}>{currency}</option>\n                                                )}\n                                        </select>\n                                    </form>\n\n                                    <form className='form-inline mb-4'>\n                                        <input \n                                            disabled={true}\n                                            value={\n                                                result=== null ? 'calculating' : result}\n                                            className='form-control  form-control-lg mx-3'>\n                                        </input>\n                                        <select \n                                            name='convertTo'\n                                            value={convertTo}\n                                            onChange={this.handleSelect}\n                                            className='form-control form-control-lg'>\n                                            {currencies.map(currency => \n                                                    <option key={currency} value={currency}>{currency}</option>\n                                                    )}\n                                        </select>\n                                    </form>\n\n                                </div>\n                                <div className='col-lg-2 align-self-center'>\n                                    <h1 onClick={this.handleSwap} className='swap'>&#8595;&#8593;</h1>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default Converter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Converter from './Converter';\n\nimport './styles.css';\n\n\nfunction App(){\n    return(\n        <div className='App'>\n            <Converter />\n        </div>\n    )\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>,rootElement);\n"],"sourceRoot":""}